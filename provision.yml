##
# HubDrop Server
#

---
- hosts: all
  user: root

  vars_files:
    - settings.yml
    - settings.local.yml

  tasks:

    - hostname: name={{ server_hostname }}

    - name: Message of the day.
      action: template src=templates/motd.j2 dest=/etc/update-motd.d/95-ansible mode=755

    # Apt package installation of required software.
    - name: Packages | Install required packages.
      action: apt pkg={{ item }} state=installed
      with_items:
        - php5
        - apache2
        - php-apc
        - php5-xmlrpc
        - php5-curl
        - php5-gd
        - sendmail
        - vim
        - git
        - apache2

    ##
    # HubDrop App
    #

    # Create the hubdrop user
    - name: HubDrop | Create HubDrop User
      user:
        name=hubdrop
        shell=/bin/bash
        groups=www-data
        append=yes
        home=/var/hubdrop
        generate_ssh_key=yes

    # Save .ssh/config
    - name: HubDrop | Save SSH config file.
      template: src=templates/ssh-config.j2 dest=/var/hubdrop/.ssh/config mode=0600

    # Clone the app
    - name: HubDrop | Clone App source code.
      git:
        repo={{ app_repo }}
        dest=/var/hubdrop/app
        version={{ app_version }}

    # Change ownership to hubdrop
    - file: path=/var/hubdrop/app owner=hubdrop group=hubdrop recurse=yes state=directory

    # Give app.php to www-data
    - file: path=/var/hubdrop/app/web/app.php owner=www-data group=hubdrop

    # Create cache and logs folders
    - file: path=/var/hubdrop/app/app/cache owner=www-data group=hubdrop state=directory
    - file: path=/var/hubdrop/app/app/logs owner=www-data group=hubdrop state=directory

    # Set up `hubdrop` and `hubdrop-jenkins` executable commands
    - name: HubDrop | Set up hubdrop executable
      template:
        src=templates/usr-bin-hubdrop.j2
        dest=/usr/bin/hubdrop mode=0755

    - name: HubDrop | Set up hubdrop-jenkins executable
      template:
        src=templates/usr-bin-hubdrop-jenkins.j2
        dest=/usr/bin/hubdrop-jenkins mode=0755

    # Set environment variables for console.  Variables also set in apache-vhost.j2
    - name: HubDrop | Set global environment variables
      template: src=templates/etc-profile-d-hubdrop-environment.sh.j2 dest=/etc/profile.d/hubdrop-environment.sh mode=0644

    ##
    # APACHE
    #

    # Enable modules rewrite and vhost_alias
    - name: Apache | Enable some required modules
      action: command a2enmod rewrite vhost_alias

    # Save vhost config file
    - name: Apache | Configuration file for our site
      action: template src=templates/apache-vhost.j2 dest=/etc/apache2/sites-available/{{ server_hostname }}

    # Disable the default site (@TODO: Should we just remove it to speed up provisioning?)
    - name: Apache | Disable the default site
      action: command a2dissite default

    # Enable our apache site (@TODO: Should we just create the symlink ourselves to speed up provisioning?
    - name: Apache | Enable our new site
      action: command a2ensite {{ server_hostname }}

    # Reload Apache (@TODO: Only do this if we altered the vhost config)
    - name: Apache | reload
      action: command service apache2 reload

    ##
    # JENKINS
    # @TODO: Add Jobs, SUDO config, and web UI configuration

    # Install jenkins apt package.
    - name: Jenkins | Install jenkins package
      apt: pkg={{ item }} state=installed
      with_items:
        - jenkins

    # Save jenkins jobs
    # Create Mirror job
    - file: path=/var/lib/jenkins/jobs/create-mirror owner=jenkins group=jenkins recurse=yes state=directory
    - template: src=templates/jenkins-create-mirror-config.xml.j2 dest=/var/lib/jenkins/jobs/create-mirror/config.xml mode=0644

    # Update Mirror job
    - file: path=/var/lib/jenkins/jobs/update-mirror owner=jenkins group=jenkins recurse=yes state=directory
    - template: src=templates/jenkins-update-mirror-config.xml.j2 dest=/var/lib/jenkins/jobs/update-mirror/config.xml mode=0644

    # Update all Mirrors job
    - file: path=/var/lib/jenkins/jobs/update-mirrors owner=jenkins group=jenkins recurse=yes state=directory
    - template: src=templates/jenkins-update-mirrors-config.xml.j2 dest=/var/lib/jenkins/jobs/update-mirrors/config.xml mode=0644

    # Grant jenkins ability to run "sudo hubdrop-jenkins" without a password.

    # @TODO:
    # Command for jenkins-cli

    # Setup github authorization