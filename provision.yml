##
# HubDrop Server
#

---
- hosts: all
  user: root

  vars_files:
    - settings.yml
    - settings.local.yml

  tasks:

    - hostname: name={{ server_hostname }}

    - name: Setup | Message of the day.
      action: template src=templates/motd.j2 dest=/etc/update-motd.d/95-ansible mode=755

    - name: Setup | Install required packages.
      action: apt pkg={{ item }} state=installed
      with_items:
        - php5
        - apache2
        - php-apc
        - php5-xmlrpc
        - php5-curl
        - php5-gd
        - sendmail
        - vim
        - git
        - apache2

    ##
    # HubDrop App
    #

    - name: HubDrop | Create HubDrop User
      user:
        name=hubdrop
        shell=/bin/bash
        groups=www-data
        append=yes
        home=/var/hubdrop
        generate_ssh_key=yes
        uid=1010

    - name: HubDrop | Save SSH config file.
      template:
        src=templates/ssh-config.j2
        dest=/var/hubdrop/.ssh/config
        owner=hubdrop
        group=hubdrop
        mode=0600

    - name: HubDrop | Clone app source code.
      when: vagrant == False
      git:
        repo={{ app_repo }}
        dest={{ app_root }}
        version={{ app_version }}

    - name: HubDrop | Grant ownership of app source code to hubdrop user.
      when: vagrant == False
      file:
        path={{ app_root }}
        owner=hubdrop group=hubdrop
        recurse=yes
        state=directory

    - name: HubDrop | Grant ownership of app.php to www-data
      when: vagrant == False
      file:
        path={{ app_root }}/web/app.php
        owner=www-data group=hubdrop

    - name: HubDrop | Create cache folder
      file:
        path=/var/hubdrop/cache
        owner=hubdrop
        group=www-data
        state=directory
        mode=0774

    - name: HubDrop | Create logs folder
      file:
        path=/var/hubdrop/logs
        owner=hubdrop
        group=www-data
        state=directory
        mode=0774

    - name: HubDrop | Set up `hubdrop` executable
      template:
        src=templates/usr-bin-hubdrop.j2
        dest=/usr/bin/hubdrop
        mode=0755

    - name: HubDrop | Set up `hubdrop-jenkins` executable
      template:
        src=templates/usr-bin-hubdrop-jenkins.j2
        dest=/usr/bin/hubdrop-jenkins
        mode=0755

    - name: HubDrop | Set global environment variables
      template:
        src=templates/etc-profile-d-hubdrop-environment.sh.j2
        dest=/etc/profile.d/hubdrop-environment.sh
        mode=0644

    ##
    # APACHE
    #

    - name: Apache | Enable rewrite and vhost_alias modules.
      action: command a2enmod rewrite vhost_alias

    # @TODO: Should we just remove it to speed up provisioning?
    - name: Apache | Disable the default site.
      action: command a2dissite default

    - name: Apache | Save virtualhost configuration file.
      action: template src=templates/apache-vhost.j2 dest=/etc/apache2/sites-available/{{ server_hostname }}

    # @TODO: Should we just create the symlink ourselves to speed up provisioning?
    - name: Apache | Enable hubdrop.io site.
      action: command a2ensite {{ server_hostname }}
      notify:
        - restart apache

    ##
    # JENKINS
    #

    - name: Jenkins | Install jenkins apt package
      apt: pkg={{ item }} state=installed
      with_items:
        - jenkins


    - name: Jenkins | Create jobs directory.
      file: path=/var/lib/jenkins/jobs owner=jenkins group=jenkins recurse=yes state=directory

    # Create Mirror job
    - name: Jenkins | Set up "create-mirror" job directory.
      file: path=/var/lib/jenkins/jobs/create-mirror owner=jenkins group=jenkins recurse=yes state=directory

    - name: Jenkins | Set up "create-mirror" job config file.
      template: src=templates/jenkins-create-mirror-config.xml.j2 dest=/var/lib/jenkins/jobs/create-mirror/config.xml mode=0644

    # Update Mirror job
    - name: Jenkins | Set up "update-mirror" job directory.
      file: path=/var/lib/jenkins/jobs/update-mirror owner=jenkins group=jenkins recurse=yes state=directory

    - name: Jenkins | Set up "update-mirror" job config file.
      template: src=templates/jenkins-update-mirror-config.xml.j2 dest=/var/lib/jenkins/jobs/update-mirror/config.xml mode=0644

    # Update all Mirrors job
    - name: Jenkins | Set up "update-mirrors" job directory.
      file: path=/var/lib/jenkins/jobs/update-mirrors owner=jenkins group=jenkins recurse=yes state=directory

    - name: Jenkins | Set up "update-mirrors" job config file.
      template: src=templates/jenkins-update-mirrors-config.xml.j2 dest=/var/lib/jenkins/jobs/update-mirrors/config.xml mode=0644

    - name: Configure sudo privileges for jenkins
      template:
        src=templates/etc-sudoers-d-jenkins.j2
        dest=/etc/sudoers.d/jenkins
        mode=0440


    # @TODO Setup jenkins-cli executable
    # @TODO Setup github authorization
    # Let's use http://docs.ansible.com/playbooks_prompts.html

    - name: ensure apache is running
      service: name=apache2 state=started

  handlers:
    - name: restart apache
      service: name=apache2 state=restarted